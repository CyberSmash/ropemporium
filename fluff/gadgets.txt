


Gadgets
=======


0x0000000000400563: adc byte ptr [rax], ah; cmp rax, 0x601038; mov rbp, rsp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x000000000040057e: adc byte ptr [rax], ah; jmp rax; 
0x0000000000400569: adc byte ptr [rax], ah; mov rbp, rsp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x000000000040054f: add bl, dh; ret; 
0x00000000004005cf: add byte ptr [rax + 0x200a613d], al; add byte ptr [rax], al; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004004da: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004004cf: add byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004cf: add byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x00000000004006ad: add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004004cd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004cd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x00000000004006ab: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004004cb: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004c9: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004c8: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004ca: add byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x0000000000400611: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000004004cc: add byte ptr [rax], al; add byte ptr [rax], al; sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004cc: add byte ptr [rax], al; add byte ptr [rax], al; sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400572: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005b4: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400631: add byte ptr [rax], al; bextr rbx, rcx, rdx; ret; 
0x00000000004005ce: add byte ptr [rax], al; cmp byte ptr [rip + 0x200a61], 0; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004005d5: add byte ptr [rax], al; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400586: add byte ptr [rax], al; pop rbp; ret; 
0x00000000004006b2: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x00000000004004ce: add byte ptr [rax], al; sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004ce: add byte ptr [rax], al; sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400574: add byte ptr [rax], al; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005b6: add byte ptr [rax], al; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005cd: add byte ptr [rax], r8b; cmp byte ptr [rip + 0x200a61], 0; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400585: add byte ptr [rax], r8b; pop rbp; ret; 
0x00000000004005d6: add byte ptr [rbp + 0x17], dh; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004005e7: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000400630: add byte ptr ds:[rax], al; bextr rbx, rcx, rdx; ret; 
0x0000000000400690: add dword ptr [rax + 0x39], ecx; fnsave dword ptr [rbp - 0x16]; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004004d6: add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d6: add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x000000000040062d: add ecx, 0x3ef2; bextr rbx, rcx, rdx; ret; 
0x00000000004005ac: add esi, eax; sar rsi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400697: add esp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004004e3: add esp, 8; ret; 
0x000000000040062c: add rcx, 0x3ef2; bextr rbx, rcx, rdx; ret; 
0x00000000004005ab: add rsi, rax; sar rsi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400696: add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004004e2: add rsp, 8; ret; 
0x00000000004005d4: and byte ptr [rax], al; add byte ptr [rbp + 0x17], dh; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004004d9: and byte ptr [rax], al; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d9: and byte ptr [rax], al; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400633: bextr rbx, rcx, rdx; ret; 
0x000000000040060b: call 0x500; mov eax, 0; pop rbp; ret; 
0x0000000000400620: call 0x510; nop; pop rbp; ret; 
0x00000000004005dd: call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004005a9: call 0xffffffffc6014ded; sar rsi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x000000000040070f: call qword ptr [rax + 1]; 
0x00000000004007a3: call qword ptr [rax]; 
0x00000000004007c3: call qword ptr [rcx]; 
0x00000000004004e0: call rax; 
0x00000000004004e0: call rax; add rsp, 8; ret; 
0x00000000004005d0: cmp byte ptr [rip + 0x200a61], 0; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004005d1: cmp eax, 0x200a61; add byte ptr [rbp + 0x17], dh; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400567: cmp eax, 0x601038; mov rbp, rsp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400692: cmp ebp, ebx; jne 0x680; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400566: cmp rax, 0x601038; mov rbp, rsp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400691: cmp rbp, rbx; jne 0x680; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040068c: fmul qword ptr [rax - 0x7d]; ret; 
0x0000000000400693: fnsave dword ptr [rbp - 0x16]; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004004d2: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d2: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x00000000004004de: je 0x4e2; call rax; 
0x00000000004004de: je 0x4e2; call rax; add rsp, 8; ret; 
0x000000000040056f: je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400579: je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005b1: je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005bb: je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004006e7: jmp qword ptr [rax]; 
0x00000000004007e3: jmp qword ptr [rbp]; 
0x0000000000400581: jmp rax; 
0x00000000004005d7: jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400694: jne 0x680; add rsp, 8; pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004005e2: mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400606: mov dword ptr [rbp + 0x48], edx; mov ebp, esp; call 0x500; mov eax, 0; pop rbp; ret; 
0x0000000000400610: mov eax, 0; pop rbp; ret; 
0x0000000000400571: mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005b3: mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400561: mov eax, 0x601038; cmp rax, 0x601038; mov rbp, rsp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004004d5: mov eax, dword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d5: mov eax, dword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400609: mov ebp, esp; call 0x500; mov eax, 0; pop rbp; ret; 
0x00000000004005db: mov ebp, esp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x000000000040056d: mov ebp, esp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400619: mov ebp, esp; mov edi, 0x4006c4; call 0x510; nop; pop rbp; ret; 
0x000000000040061b: mov edi, 0x4006c4; call 0x510; nop; pop rbp; ret; 
0x000000000040057c: mov edi, 0x601038; jmp rax; 
0x00000000004004d4: mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d4: mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400608: mov rbp, rsp; call 0x500; mov eax, 0; pop rbp; ret; 
0x00000000004005da: mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x000000000040056c: mov rbp, rsp; je 0x588; mov eax, 0; test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400618: mov rbp, rsp; mov edi, 0x4006c4; call 0x510; nop; pop rbp; ret; 
0x0000000000400636: neg ecx; ret; 
0x00000000004005cb: nop dword ptr [rax + rax]; cmp byte ptr [rip + 0x200a61], 0; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400583: nop dword ptr [rax + rax]; pop rbp; ret; 
0x00000000004005c5: nop dword ptr [rax]; pop rbp; ret; 
0x00000000004005ca: nop word ptr [rax + rax]; cmp byte ptr [rip + 0x200a61], 0; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400625: nop; pop rbp; ret; 
0x00000000004005d3: or ah, byte ptr [rax]; add byte ptr [rax], al; jne 0x5f0; push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x00000000004005e5: or ah, byte ptr [rax]; add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004004d3: or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d3: or byte ptr [rax - 0x75], cl; add eax, 0x200b1d; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400699: or byte ptr [rbx + 0x5d], bl; pop r12; pop r13; pop r14; pop r15; ret; 
0x00000000004004d8: or esp, dword ptr [rax]; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004005e4: or r12b, byte ptr [r8]; add byte ptr [rcx], al; pop rbp; ret; 
0x000000000040069c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040069e: pop r13; pop r14; pop r15; ret; 
0x00000000004006a0: pop r14; pop r15; ret; 
0x00000000004006a2: pop r15; ret; 
0x000000000040057b: pop rbp; mov edi, 0x601038; jmp rax; 
0x000000000040069b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040069f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400588: pop rbp; ret; 
0x000000000040069a: pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040062b: pop rcx; add rcx, 0x3ef2; bextr rbx, rcx, rdx; ret; 
0x00000000004006a3: pop rdi; ret; 
0x000000000040062a: pop rdx; pop rcx; add rcx, 0x3ef2; bextr rbx, rcx, rdx; ret; 
0x00000000004006a1: pop rsi; pop r15; ret; 
0x000000000040069d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000400607: push rbp; mov rbp, rsp; call 0x500; mov eax, 0; pop rbp; ret; 
0x00000000004005d9: push rbp; mov rbp, rsp; call 0x560; mov byte ptr [rip + 0x200a4f], 1; pop rbp; ret; 
0x0000000000400617: push rbp; mov rbp, rsp; mov edi, 0x4006c4; call 0x510; nop; pop rbp; ret; 
0x0000000000400295: ret; 
0x00000000004004dd: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040062e: sal edx, 0x3e; add byte ptr [rax], al; bextr rbx, rcx, rdx; ret; 
0x00000000004005af: sar esi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005ae: sar rsi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004004d7: sbb eax, 0x4800200b; test eax, eax; je 0x4e2; call rax; 
0x00000000004004d7: sbb eax, 0x4800200b; test eax, eax; je 0x4e2; call rax; add rsp, 8; ret; 
0x00000000004005a8: shr eax, 0x3f; add rsi, rax; sar rsi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005a7: shr rax, 0x3f; add rsi, rax; sar rsi, 1; je 0x5c8; mov eax, 0; test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400639: stosb byte ptr [rdi], al; ret; 
0x00000000004006b5: sub esp, 8; add rsp, 8; ret; 
0x00000000004004d1: sub esp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d1: sub esp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x00000000004006b4: sub rsp, 8; add rsp, 8; ret; 
0x00000000004004d0: sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; 
0x00000000004004d0: sub rsp, 8; mov rax, qword ptr [rip + 0x200b1d]; test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x00000000004004dc: test eax, eax; je 0x4e2; call rax; 
0x00000000004004dc: test eax, eax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400577: test eax, eax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005b9: test eax, eax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004004db: test rax, rax; je 0x4e2; call rax; 
0x00000000004004db: test rax, rax; je 0x4e2; call rax; add rsp, 8; ret; 
0x0000000000400576: test rax, rax; je 0x588; pop rbp; mov edi, 0x601038; jmp rax; 
0x00000000004005b8: test rax, rax; je 0x5c8; pop rbp; mov edi, 0x601038; jmp rax; 
0x0000000000400628: xlatb; ret; 

155 gadgets found
