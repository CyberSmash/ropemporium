


Gadgets
=======


0x00000000004007be: adc byte ptr [rax], ah; jmp rax; 
0x0000000000400916: add al, bpl; ret; 
0x0000000000400917: add al, ch; ret; 
0x000000000040078f: add bl, dh; ret; 
0x00000000004006aa: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400a3d: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400a3b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x00000000004008eb: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004008ec: add byte ptr [rax], al; add cl, cl; ret; 
0x00000000004009b4: add byte ptr [rax], al; call 0x750; pop rax; ret; 
0x00000000004007c6: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400a42: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x00000000004007b4: add byte ptr [rax], al; test rax, rax; je 0x7c8; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004007f6: add byte ptr [rax], al; test rax, rax; je 0x808; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004008ed: add byte ptr [rax], al; leave; ret; 
0x00000000004007c5: add byte ptr [rax], r8b; pop rbp; ret; 
0x0000000000400827: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004008ee: add cl, cl; ret; 
0x00000000004009b2: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x750; pop rax; ret; 
0x00000000004006a6: add eax, 0x20094d; test rax, rax; je 0x6b2; call rax; 
0x00000000004006a6: add eax, 0x20094d; test rax, rax; je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004009c5: add eax, ebp; ret; 
0x00000000004006b3: add esp, 8; ret; 
0x00000000004009c4: add rax, rbp; ret; 
0x00000000004006b2: add rsp, 8; ret; 
0x00000000004006a9: and byte ptr [rax], al; test rax, rax; je 0x6b2; call rax; 
0x00000000004006a9: and byte ptr [rax], al; test rax, rax; je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004008db: call 0x6d0; mov edi, 0x400aa0; call 0x6e0; mov eax, 0; leave; ret; 
0x00000000004008e5: call 0x6e0; mov eax, 0; leave; ret; 
0x00000000004009a0: call 0x6e0; nop; leave; ret; 
0x0000000000400996: call 0x710; mov edi, 0x400b69; call 0x6e0; nop; leave; ret; 
0x00000000004009ac: call 0x720; mov edi, 1; call 0x750; pop rax; ret; 
0x00000000004009b6: call 0x750; pop rax; ret; 
0x000000000040081d: call 0x7a0; mov byte ptr [rip + 0x20084f], 1; pop rbp; ret; 
0x0000000000400c8b: call qword ptr [rbx]; 
0x00000000004006b0: call rax; 
0x00000000004006b0: call rax; add rsp, 8; ret; 
0x0000000000400a1c: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000004006a2: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x20094d; test rax, rax; je 0x6b2; call rax; 
0x00000000004006ae: je 0x6b2; call rax; 
0x00000000004006ae: je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004007b9: je 0x7c8; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004007fb: je 0x808; pop rbp; mov edi, 0x601070; jmp rax; 
0x0000000000400c23: jmp qword ptr [rax]; 
0x0000000000400cab: jmp qword ptr [rbp]; 
0x00000000004007c1: jmp rax; 
0x0000000000400822: mov byte ptr [rip + 0x20084f], 1; pop rbp; ret; 
0x00000000004008ea: mov eax, 0; leave; ret; 
0x00000000004009c1: mov eax, dword ptr [rax]; ret; 
0x00000000004006a5: mov eax, dword ptr [rip + 0x20094d]; test rax, rax; je 0x6b2; call rax; 
0x00000000004006a5: mov eax, dword ptr [rip + 0x20094d]; test rax, rax; je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004009aa: mov ebp, esp; call 0x720; mov edi, 1; call 0x750; pop rax; ret; 
0x000000000040081b: mov ebp, esp; call 0x7a0; mov byte ptr [rip + 0x20084f], 1; pop rbp; ret; 
0x00000000004008e0: mov edi, 0x400aa0; call 0x6e0; mov eax, 0; leave; ret; 
0x000000000040099b: mov edi, 0x400b69; call 0x6e0; nop; leave; ret; 
0x00000000004007bc: mov edi, 0x601070; jmp rax; 
0x00000000004009b1: mov edi, 1; call 0x750; pop rax; ret; 
0x00000000004009c0: mov rax, qword ptr [rax]; ret; 
0x00000000004006a4: mov rax, qword ptr [rip + 0x20094d]; test rax, rax; je 0x6b2; call rax; 
0x00000000004006a4: mov rax, qword ptr [rip + 0x20094d]; test rax, rax; je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004009a9: mov rbp, rsp; call 0x720; mov edi, 1; call 0x750; pop rax; ret; 
0x000000000040081a: mov rbp, rsp; call 0x7a0; mov byte ptr [rip + 0x20084f], 1; pop rbp; ret; 
0x00000000004008e1: movabs al, byte ptr [0xfffffdf6e800400a]; mov eax, 0; leave; ret; 
0x00000000004007c3: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000400805: nop dword ptr [rax]; pop rbp; ret; 
0x00000000004008e2: or al, byte ptr [rax]; call 0x6e0; mov eax, 0; leave; ret; 
0x0000000000400824: or byte ptr [r8], r12b; add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004006a3: or byte ptr [rax - 0x75], cl; add eax, 0x20094d; test rax, rax; je 0x6b2; call rax; 
0x0000000000400825: or byte ptr [rax], ah; add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004006a8: or dword ptr [rax], esp; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040099d: or eax, dword ptr [rax]; call 0x6e0; nop; leave; ret; 
0x00000000004006a7: or qword ptr [r8], r12; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400a2c: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400a2e: pop r13; pop r14; pop r15; ret; 
0x0000000000400a30: pop r14; pop r15; ret; 
0x0000000000400a32: pop r15; ret; 
0x00000000004009bb: pop rax; ret; 
0x00000000004007bb: pop rbp; mov edi, 0x601070; jmp rax; 
0x0000000000400a2b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400a2f: pop rbp; pop r14; pop r15; ret; 
0x00000000004007c8: pop rbp; ret; 
0x0000000000400a33: pop rdi; ret; 
0x0000000000400a31: pop rsi; pop r15; ret; 
0x0000000000400a2d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000400819: push rbp; mov rbp, rsp; call 0x7a0; mov byte ptr [rip + 0x20084f], 1; pop rbp; ret; 
0x00000000004006ad: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400a45: sub esp, 8; add rsp, 8; ret; 
0x00000000004006a1: sub esp, 8; mov rax, qword ptr [rip + 0x20094d]; test rax, rax; je 0x6b2; call rax; 
0x0000000000400a44: sub rsp, 8; add rsp, 8; ret; 
0x00000000004006a0: sub rsp, 8; mov rax, qword ptr [rip + 0x20094d]; test rax, rax; je 0x6b2; call rax; 
0x0000000000400914: test eax, 0xe800400a; ret; 
0x00000000004006ac: test eax, eax; je 0x6b2; call rax; 
0x00000000004006ac: test eax, eax; je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004007b7: test eax, eax; je 0x7c8; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004007f9: test eax, eax; je 0x808; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004006ab: test rax, rax; je 0x6b2; call rax; 
0x00000000004006ab: test rax, rax; je 0x6b2; call rax; add rsp, 8; ret; 
0x00000000004007b6: test rax, rax; je 0x7c8; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004007f8: test rax, rax; je 0x808; pop rbp; mov edi, 0x601070; jmp rax; 
0x00000000004009be: xchg eax, esp; ret; 
0x00000000004009bd: xchg rax, rsp; ret; 
0x00000000004008ef: leave; ret; 
0x00000000004009a5: nop; leave; ret; 
0x00000000004006b6: ret; 

104 gadgets found
